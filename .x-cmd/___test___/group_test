# shellcheck shell=sh
# shellcheck disable=SC2039,3043,2016

test_gcode_groups_ls(){
    local groupname="xxys1"
    @assert stdout eval 'x gcode groups ls --json --search "$groupname" | x jo . .1.name'<<A
"$groupname"
A

    NO_COLOR=1 @assert stdout x gcode groups ls --order_by name --sort asc --page 1 --per_page 2 --search "$groupname" <<A
Id        Name      Path      Visibility   Url                                       
1187690   xxys1     xxys1     private      https://gitcode.net/groups/xxys/xxys1     
1187607   xxys1.0   xxys1.0   private      https://gitcode.net/groups/xxys/xxys1.0   


A

    @assert stdout x gcode groups ls --json --per_page "1" --page "20" <<A
[]
A

    NO_COLOR=1 @assert stdout x gcode groups ls --per_page "1" --page "20" <<A
Id   Name   Path   Visibility   Url   


A
}

test_gcode_groups_repo_ls(){
    local id="1186728"
    @assert stdout eval 'x gcode groups repo ls --json --per_page "1" --page "1" --visibility "private" "$id" | x jo . .1.namespace.id .1.visibility'<<A
$id
"private"
A

    NO_COLOR=1 @assert stdout x gcode groups repo ls --per_page "2" --page "1" --visibility "private" "$id" <<A
Id       Name     Path     Visibility   Url                               
198181   gcode    gcode    private      https://gitcode.net/xxys/gcode    
198180   gltest   gltest   private      https://gitcode.net/xxys/gltest   


A

    @assert stdout x gcode groups repo ls --per_page "30" --json --page "10" --visibility "public" "$id" <<A
[]
A

    NO_COLOR=1 @assert stdout x gcode groups repo ls --per_page "30" --page "10" --visibility "public" "$id" <<A
Id   Name   Path   Visibility   Url   


A
}

test_gcode_groups_issue_ls(){
    local title="gitcalow"
    local milestone="gcode"
    local id="1186728"
    @assert stdout eval 'x gcode groups issue --json --state "closed" --search "$title" --milestone "$milestone" --id "$id" | x jo . .1.title .1.state .1.milestone.title '<<A
"$title"
"closed"
"$milestone"

A

    NO_COLOR=1 @assert stdout x gcode groups issue --order_by "created_at" --state "opened" --sort "asc" --id "$id" <<A
Id      iid   project_id   title     state    web_url                                      
89958   3     198180       gltest1   opened   https://gitcode.net/xxys/gltest/-/issues/3   
89957   2     198180       altest    opened   https://gitcode.net/xxys/gltest/-/issues/2   
89956   1     198180       gltest    opened   https://gitcode.net/xxys/gltest/-/issues/1   


A

    @assert stdout x gcode groups issue --json --order_by "created_at" --state "opened" --search "err$title" --id "$id" <<A
[]
A

    NO_COLOR=1 @assert stdout x gcode groups issue --order_by "created_at" --state "opened" --search "err$title" --id "$id" <<A
Id   iid   project_id   title   state   web_url   


A
}


test_gcode_subgroup_ls(){
    local id="1186728"
    local subgroup="xxys1"
    local group_id="1187680"
    @assert stdout eval 'x gcode subgroup ls --json --search "$subgroup"  "$id" | x jo . .1.parent_id .1.path'<<A
$id
"$subgroup"
A

    NO_COLOR=1 @assert stdout x gcode subgroup ls --sort "asc" --order_by "name" --search "$subgroup" --skip_groups "$group_id" "$id" <<A
Id        Name      Path      Visibility   Url                                       
1187690   xxys1     xxys1     private      https://gitcode.net/groups/xxys/xxys1     
1187607   xxys1.0   xxys1.0   private      https://gitcode.net/groups/xxys/xxys1.0   


A

    @assert stdout x gcode subgroup ls --json --search "err$subgroup" "$id" <<A
[]
A

    NO_COLOR=1 @assert stdout x gcode subgroup ls --search "err$subgroup" "$id" <<A
Id   Name   Path   Visibility   Url   


A
}

test_gcode_groups_info(){
    local id="1186728"
    @assert stdout eval 'x gcode groups info --json "$id" | x jo . .id'<<A
$id
A

    NO_COLOR=1 @assert stdout eval 'x gcode groups info "$id" | awk '\''
NR==2{
    print match($0, " - Id: " "[0-9]+" )
}
NR==3{
    print match($0, " - Name:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
NR==4{
    print match($0, " - Path:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
NR==5{
    print match($0, " - Url: (https)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[.][a-z][a-z][a-z]?[a-z]?[a-z]?[a-z]?(/[-A-Za-z0-9+&@#/%=~_|]*)?" )
}
NR==6{
    print match($0, " - Visibility:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
'\'' ' << A
1
1
1
1
1
A

    @assert stdout eval 'x gcode groups info --json "11$id" |x jo .message'<<A
"404 Group Not Found"
A

    NO_COLOR=1 @assert stdout x gcode groups info "11$id"  <<A
X Couldn't find any groups info data.
 - ErrorMsg:{"message":"404 Group Not Found"}
A
}

test_gcode_subgroup_create(){
    local id="1187742"
    local path="xcmd3"
    local name="xcmd3"
    @assert stdout eval "x gcode subgroup create --json --parent_id "$id" --subgroup_path "$path" --name "$name" | x jo . .parent_id .path .name"<<A
$id
"$path"
"$name"
A

    NO_COLOR=1 @assert stdout eval 'x gcode subgroup create --parent_id "$id" --subgroup_path "ui$path" --name "ui$name"| awk '\''
NR==2{
    print match($0, " - Id: " "[0-9]+" )
}
NR==3{
    print match($0, " - Name:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
NR==4{
    print match($0, " - Path:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
NR==5{
    print match($0, " - Url: (https)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[.][a-z][a-z][a-z]?[a-z]?[a-z]?[a-z]?(/[-A-Za-z0-9+&@#/%=~_|]*)?" )
}
NR==6{
    print match($0, " - Visibility:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
}
'\'' ' << A
1
1
1
1
1
A

    @assert stdout eval 'x gcode subgroup create --json --parent_id "11$id" --subgroup_path "$path" --name "$name" |x jo .message'<<A
"404 Group Not Found"
A

    NO_COLOR=1 @assert stdout x gcode subgroup create --parent_id "11$id" --subgroup_path "$path" --name "$name" <<A
X Creating subgroup failure: $name.
 - ErrorMsg:{"message":"404 Group Not Found"}
A
}

# test_gcode_groups_update(){
#     local id="1187742"
#     local path="xcmd"
#     local name="xcmd"
#     local description="gctest"
#     local visibility="public"
#     local subgroup_creation_level="maintainer"
#     @assert stdout eval "x gcode groups update --json --path "$path" --name "$name" --description "$description" --visibility "$visibility" \
#     --subgroup_creation_level "$subgroup_creation_level" "$id" | x jo . .id .path .name .description .visibility .subgroup_creation_level"<<A
# $id
# "$path"
# "$name"
# "$description"
# "$visibility"
# "$subgroup_creation_level"
# A

#     NO_COLOR=1 @assert stdout eval 'x gcode groups update -p "$path" --name "$name" --description "$description" --visibility "$visibility" \
#     --subgroup_creation_level "$subgroup_creation_level" "$id"| awk '\''
# NR==2{
#     print match($0, " - Id: " "[0-9]+" )
# }
# NR==3{
#     print match($0, " - Name:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
# }
# NR==4{
#     print match($0, " - Path:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
# }
# NR==5{
#     print match($0, " - Url: (https)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[.][a-z][a-z][a-z]?[a-z]?[a-z]?[a-z]?(/[-A-Za-z0-9+&@#/%=~_|]*)?" )
# }
# NR==6{
#     print match($0, " - Visibility:" " [A-Za-z0-9]{1}[A-Za-z0-9_-]+{1,37}[A-Za-z0-9]{1}" )
# }
# '\'' ' << A
# 1
# 1
# 1
# 1
# 1
# A

#     @assert stdout eval 'x gcode groups update --json --path "$path" --name "$name" --description "$description" --visibility "$visibility" \
#     --subgroup_creation_level "$subgroup_creation_level" "11$id" |x jo .message'<<A
# "404 Group Not Found"
# A

#     NO_COLOR=1 @assert stdout x gcode groups update --path "$path" --name "$name" --description "$description" --visibility "$visibility" \
#     --subgroup_creation_level "$subgroup_creation_level" "11$id" <<A
# X Update groups failure: $name.
#  - ErrorMsg:{"message":"404 Group Not Found"}
# A
# }

test_gcode_groups_rm(){
    local id ; id="$(x gcode subgroup ls --json 1187742 | x jo .1.id)"
    local uid ; uid="$(x gcode subgroup ls --json 1187742 | x jo .2.id)"
    x gcode groups rm -y "$id"
    @assert stdout echo $? <<A
0
A

    NO_COLOR=1 @assert stdout x gcode groups rm -y "$uid" <<A
âœ” del groups $uid successfully.
A

    x gcode groups rm -y "11$id"
    @assert stdout echo $? <<A
1
A

    NO_COLOR=1 @assert stdout x gcode groups rm -y "11$id" <<A
X del groups 11$id failure.
A
}


# @assert:file:func
