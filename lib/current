# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gcode_current(){
    param:subcmd ___x_cmd_gcode_current                        \
        owner       "Get current owner"
    param:subcmd:try
    param:run

    ___x_cmd_gcode_current _param_help_doc
    gcode_log warn "Subcmd Not Found."
    return 1
}

# shellcheck disable=SC2120
___x_cmd_gcode_current_owner(){
    param:void
    local O="${O:-___x_cmd_gcode_GCODE_DEFAULT}"
    if [ -n "$1" ]; then
        ___X_CMD_GCODE_DEFAULT_OWNER="$1"
        if ___x_cmd_gh_config_set  "user" "$___X_CMD_GCODE_DEFAULT_OWNER" 1>/dev/null 2>&1;then
            ___x_cmd_ui_tf true "Manually change the owner to $___X_CMD_GCODE_DEFAULT_OWNER"
        fi
        return
    elif [ -z "$___X_CMD_GCODE_DEFAULT_OWNER" ];then
        x jo env . ___X_CMD_GCODE_DEFAULT_OWNER=.username<<A
        $(___x_cmd_gcode_http get "/user")
A
        if [ -z "$___X_CMD_GCODE_DEFAULT_OWNER" ];then
            gcode_log error "get current owner fail"
            return 1
        fi
        ___x_cmd_gh_config_set  "user" "$___X_CMD_GCODE_DEFAULT_OWNER" 1>/dev/null 2>&1
    fi
    printf "%s\n" "$___X_CMD_GCODE_DEFAULT_OWNER"
}
