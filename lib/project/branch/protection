# shellcheck shell=sh
# shellcheck disable=SC2039,3043
___x_cmd_gcode_project_branch_protection(){
    param:subcmd ___x_cmd_gcode_project_branch_protection \
        "info|i"            "protection branch info"            \
        "ls|l"              "protection branch list"            \
        unset               "remove branch protection"          \
        set                 "set branch to protection branch"
    param:subcmd:try
    param:run


    ___x_cmd_gcode_project_branch_protection _param_help_doc
    return 1
}

# Section: ls
___x_cmd_gcode_project_branch_protection_ls(){
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    --project   "The ID or URL-encoded path of the project."                        <>:RepoName
    --search    "Name or part of the name of protected branches to be searched for" <>=""

    --json|-j   "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    ___X_CMD_UI_STATIC=1 ___gcode_ui_mutual '___ui_table_json BranchName=.name allow_force_push=.allow_force_push code_owner_approval_required=.code_owner_approval_required -- $@' \
        ___x_cmd_gcode_get_multi "/projects/$owner_project/protected_branches" search
}
# EndSection

# Section: info
___x_cmd_gcode_project_branch_protection_info(){
    param:dsl       '
options:
    #1          "branch name"                                   <>
    --project   "The ID or URL-encoded path of the project."    <>:RepoName

    --json|-j   "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl get "/projects/${owner_project}/protected_branches/$1" | _____x_cmd_gcode_branch_protection_ui_utils Info
}
# EndSection

# Section: set
___x_cmd_gcode_project_branch_protection_set(){
    param:dsl       '
options:
    #1              "branch name"                                                   <>:Branch
    --project       "The ID or URL-encoded path of the project."                    <>:RepoName

    --push_access_level         "Access levels allowed to push (defaults: 40)"      <>:Number=""
    --merge_access_level        "Access levels allowed to merge (defaults: 40)"     <>:Number=""
    --unprotect_access_level    "Access levels allowed to unprotect (defaults: 40)" <>:Number=""
    --allow_force_push          "Allow all users with push access to force push."   <>:Boolean=""

    --json|-j       "output json data"
'
    param:run

    local name="$1"
    local gen_gcode_json
    gen_gcode_json="$(param:option2json +name)"
    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl post "/projects/${owner_project}/protected_branches" "gen_gcode_json" | _____x_cmd_gcode_branch_protection_ui_utils Set
}
# EndSection

___x_cmd_gcode_project_branch_protection_unset(){
    param:dsl       '
options:
    #1          "branch name"                                   <>
    --project   "The ID or URL-encoded path of the project."    <>:RepoName
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl delete "/projects/$owner_project/protected_branches/$1"| (
        x jo env . error=.
        if ___x_cmd_gcode_http_error; then
            ___x_cmd_ui_tf  true "del ${1} branch protection success"
        else
            ___x_cmd_ui_tf false "del ${1} branch protection fail" "ErrorMsg:$error"
            return 1
        fi
    )
}

# Section: utils
_____x_cmd_gcode_branch_protection_ui_utils()(
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gcode_http_error
        return
    fi

    local data
    local msg
    local error_msg
    case "$1" in
        Info)
            data="Allow_Force_Push=.allow_force_push Code_Owner_Approval_Required=.code_owner_approval_required"
            msg="get repo $project protection branch info success"
            error_msg="get repo $project protection branch info fail"
            ;;
        Set)
            msg="set protection branch success"
            error_msg="set protection branch failed."
            ;;
    esac
    x jo env . names=.name error=. $data
    if [ -n "$names" ]; then
        ___x_cmd_ui_tf true "$msg"  ${names+"Name: $names"}   ${Allow_Force_Push+"Allow_Force_Push:$Allow_Force_Push"}    \
                                    ${Code_Owner_Approval_Required+"Code_Owner_Approval_Required:$Code_Owner_Approval_Required"}
    else
        ___x_cmd_ui_tf false "$error_msg" "ErrorMsg:$error"
        return 1
    fi
)
# EndSection