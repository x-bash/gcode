# shellcheck shell=sh
# shellcheck disable=SC2039,3043,SC2034
# https://archives.docs.gitlab.com/13.2/ee/api/tags.html
___x_cmd_gcode_project_tag(){
    param:subcmd ___x_cmd_gcode_project_tag                \
        ls              "List project member"           \
        info            "Show project member user info" \
        create          "Create project member"         \
        rm              "Remove member"
    param:subcmd:try
    param:run

    ___x_cmd_gcode_project_tag _param_help_doc

    return 1
}
# Section: tag ls
# https://archives.docs.gitlab.com/13.2/ee/api/tags.html#list-project-repository-tags
___x_cmd_gcode_project_tag_ls(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    --project                    "The ID or URL-encoded path of the project owned by the authenticated user"  <>
    --order_by                   "Return tags ordered by name or updated fields. Default is updated"          <>=""
    --sort                       "Return tags sorted in asc or desc order. Default is desc"                   <>=""
    --include_html_description   "Return list of tags matching the search criteria. "                         <>=""

    --json|-j       "output json data"
'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    ___X_CMD_UI_STATIC=1 ___gcode_ui_mutual '___ui_table_json name=.name commit=.commit.short_id protected=.protected message=.message -- $@' \
        ___x_cmd_gcode_get_multi "/projects/$owner_project/repository/tags" order_by sort
}
# EndSection

# Section: info
# https://archives.docs.gitlab.com/13.2/ee/api/tags.html#get-a-single-repository-tag
___x_cmd_gcode_project_tag_info(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1          "The name of the tag"                                                       <>
    --project   "The ID or URL-encoded path of the project owned by the authenticated user" <>

    --json|-j   "output json data"
'
    param:run
    ___x_cmd_gcode_param_init_owner_project
    ___x_cmd_gcode_curl get "/projects/$owner_project/repository/tags/$1" | _____x_cmd_gcode_project_tag_ui_utils Info
}
# EndSection

# https://archives.docs.gitlab.com/13.2/ee/api/tags.html#create-a-new-tag
___x_cmd_gcode_project_tag_create(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1          "The name of a tag"                                                         <>
    --project   "The ID or URL-encoded path of the project owned by the authenticated user" <>
    --ref       "Create tag using commit SHA, another tag name, or branch name"             <>
    --message   "Creates annotated tag"                                                     <>=""

    --json|-j   "output json data"

'
    param:run

    ___x_cmd_gcode_param_init_owner_project
    local tag_name="$1"
    local gen_gcode_json
    gen_gcode_json="$(param:option2json -project +tag_name)"
    ___x_cmd_gcode_curl post "/projects/$owner_project/repository/tags" gen_gcode_json | _____x_cmd_gcode_project_tag_ui_utils Create
}

# https://archives.docs.gitlab.com/13.2/ee/api/tags.html#delete-a-tag
___x_cmd_gcode_project_tag_rm(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    #1          "The name of a tag name"                                                    <>
    --project   "The ID or URL-encoded path of the project owned by the authenticated user" <>

    --yes|-y    "Ignore remove prompt interception"
'
    param:run

    if [ $# -eq 0 ];then
        gcode_log error "At least one user's spatial address is needed"
        return 1
    fi

    ___x_cmd_gcode_param_init_owner_project
    local tag_name
    for tag_name in "$@"; do
        [ "$yes" = "true" ] || ___x_cmd_ui_yesno "Are you sure you want to delete member : $(___x_cmd_ui bold red "$tag_name") ?" || continue
        ___x_cmd_gcode_curl delete "/projects/$owner_project/repository/tags/$tag_name" | (
            x jo env . error=.
            if  ___x_cmd_gcode_http_error; then
                ___x_cmd_ui_tf true "Remove $tag_name successfully."
            else
                ___x_cmd_ui_tf false "Remove $tag_name failure"
                return 1
            fi
        )
    done
}

# Section: project tag utils
_____x_cmd_gcode_project_tag_ui_utils()(
    if [ -n "$ENFORCE_JSON" ] || [ -n "$json" ]; then
        cat
        ___x_cmd_gcode_http_error
        return
    fi

    local data
    local msg
    local error_msg
    case "$1" in
        Info)
            data="commit=.commit.short_id author_name=.author_name release=.release protected=.protected message=.message"
            msg="Get project tag information successfully"
            error_msg="Failed to get project tag information"
            ;;
        Create)
            data="commit=.commit.short_id author_name=.author_name release=.release protected=.protected message=.message"
            msg="Get project tag information successfully"
            error_msg="Failed to get project tag information"
            ;;
    esac
    x jo env . name=.name error=. $data
    if [ -n "$name" ]; then
        ___x_cmd_ui_tf true "$msg" ${name+"Name: $name"} ${commit+"Commit: $commit"} ${author_name+"Author_name: $author_name"} \
            ${release+"Release: $release"} ${protected+"Protected: $protected"} ${message+"Message: $message"}
    else
        ___x_cmd_ui_tf false "$error_msg" "ErrorMsg:$error"
        return 1
    fi
)
# EndSection