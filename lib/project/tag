# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# shellcheck disable=SC2154,SC2086
___x_cmd_gcode_project_tag(){
    param:subcmd ___x_cmd_gcode_project_tag         \
        ls              "List project member"           \
        user            "Show project member user info" \
        add             "Add project member"            \
        rm              "Remove member"
    param:subcmd:try
    param:run

    ___x_cmd_gcode_project_tag _param_help_doc
    gcode_log warn "Subcmd Not Found."
    return 1
}
___x_cmd_gcode_project_tag_ls(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
   --id                                    "The ID or URL-encoded path of the project owned by the authenticated user"                                                 <>
   --order_by                              "Return tags ordered by name or updated fields. Default is updated"                                                         <>=""
   --sort                                  "Return tags sorted in asc or desc order. Default is desc"                                                                  <>=""
   --include_html_description              "Return list of tags matching the search criteria. "                                                                        <>=""
'
    param:run
   ___x_cmd_gcode_get_multi "/projects/$id/repository/tags"
#    ___gcode_ui_mutual ___x_cmd_gcode_get_multi "/projects/$id/repository/tags" <<A
#         ___ui_table_json Id=.id Username=.username web_url=.web_url State=.state -- \$@
# A
}

___x_cmd_gcode_project_tag_info(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
   --id                                    "The ID or URL-encoded path of the project owned by the authenticated user"                                                  <>
   --tag_name                              "The name of the tag"                                                                                                        <>
'
    param:run
   ___x_cmd_gcode_http get "/projects/$id/repository/tags/$tag_name"
    #  | \
    # {
    #     x jo env . username=.username url=.web_url email=.email
    #     if [ -n "$username" ]; then
    #          ___x_cmd_ui_tf true  "Success" "username: $username" "url: $url" "email: $email"
    #          return 0
    #     else
    #         ___x_cmd_ui_tf false "Couldn't find any data by  $user_id in project $id"
    #         return 1
    #     fi
    # }
}

# shellcheck disable=SC2181,SC2154
___x_cmd_gcode_project_tag_create(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    --id                "The ID or URL-encoded path of the project."                                   <>:address
    --expires_at        "A date string in the format YEAR-MONTH-DAY"                                <>=""
    --access_level      "A valid access level"                                                      <>:Number
    --invite_source     "The source of the invitation that starts the member creation process."     <>=""
    --tasks_to_be_done  "Tasks the inviter wants the member to focus on."                           <>=""
    --tasks_project_id  "The project ID in which to create the task issues."                        <>=""
    #1|--user_id        "The user ID of the new member or multiple IDs separated by commas"
'
    param:run

    if [ $# -eq 0 ];then
        gcode_log error "The user ID of the new member or multiple IDs separated by commas"
        return 1
    fi

    local gen_gcode_json
    gen_gcode_json="$(param:option2json -id +user_id)"

    ___x_cmd_gcode_http post "/project/$id/members" "$gen_gcode_json" | ___x_cmd_gcode_project_tag_add_json_status_handler
}

___x_cmd_gcode_project_tag_add_json_status_handler(){
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        return
    fi

    x jo env . id=.id
    if [ -n "$id" ]; then
        ___x_cmd_ui_tf true  "Add $username to $owner_project successfully"
        return 0
    else
        ___x_cmd_ui_tf false "Add user failure: $username to $owner_project"
        return 1
    fi
}

# shellcheck disable=SC2181
# https://gitcode.net/api/swagger#/deleteV5projectsOwnerprojectCollaboratorsUsername
___x_cmd_gcode_project_tag_rm(){
    param:scope     ___x_cmd_gcode
    param:dsl       '
options:
    --id                    "The ID or URL-encoded path of the group"         <>
    --skip_subresources     ""
    --unassign_issuables    ""
    #n|--user_id            "The user ID of the member"
'
    param:run

    if [ $# -eq 0 ];then
        gcode_log error "At least one user's spatial address is needed"
        return 1
    fi

    local username
    for username in "$@"; do
        # TODO:http handleï¼Œdelete repo return data is null.Status: 204 No Content
        if ___x_cmd_gcode_http delete "/project/$id/members/$username" >/dev/null; then
            gcode_log info  "Remove $username successfully."
        else
            gcode_log error "Remove $username failure"
            return 1
        fi
    done
}
