# shellcheck shell=sh disable=SC3043,2002,SC2154

# x gcode project apply a.yml lijunhao=edwinjhlee zhengyuhang=mnnna
# x gcode project apply .x-cmd/apply/gitlab-project.yml  lijunhao=edwinjhlee

___x_cmd_gcode_project_apply(){
    param:void
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then { ___x_cmd_gcode_project_apply__help; return 0; }
    fi
    ___x_cmd_gcode_current_owner 1>/dev/null || return 1

    local filepath="${1:?Provide filepath}"; shift

    local code; if code="$(
        {
            eval 'case "$filepath" in
                -)              cat | x y2j ;;
                *.json)         cat "$filepath" ;;
                *)              <"$filepath" x y2j ;;
            esac' |
             {
                x jo env . content=. owner_project=.project  apply_member=.member
                [ -n "$owner_project" ] || { gcode_log error "Not found apply configure project main key" >/dev/stderr; return 1; }
                ___x_cmd_gcode_project_apply__replace "$@"
                printf "%s\n" "$content"
                gcode_log info "Getting project info ..."
                ___x_cmd_gcode_project_apply__member_info
                ___x_cmd_gcode_project_apply__project_info
            }
        } | {
            awk -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/arr.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/sh.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/j/json.awk" \
                -f "$___X_CMD_ROOT_MOD/awk/lib/j/jiter.awk" \
                -f "$___X_CMD_ROOT_MOD/gcode/lib/awk/project/member.awk"  \
                -f "$___X_CMD_ROOT_MOD/gcode/lib/awk/project.awk" \
                -f "$___X_CMD_ROOT_MOD/gcode/lib/awk/replace.awk" \
                -f "$___X_CMD_ROOT_MOD/gcode/lib/project/apply/apply.awk"
        }
    )"; then
        # gcode_log debug "apply code: $code"
        # [ -n "$code" ] || {
        #     printf "%s\n" ""; gcode_log info "Repo apply no changes required"
        #     return 0
        # }
        # gcode_log info "Handling project by info ..."
        # if [ -n "$___X_CMD_GH_DRY_RUN" ]; then      printf "%s\n" "$code";
        # else                                        eval "$code";
        # fi
        echo "$code"
    else
        code=$?
        gcode_log error "Exit=$code. Fail to apply: $filepath" >/dev/stderr
    fi
}

# shellcheck disable=SC2154
___x_cmd_gcode_project_apply__member_info(){
    [ -n "$apply_member" ] || { printf "\n"; return 0; }

    NO_CACHE=1 x gcode project member ls --json --project "$owner_project" | x ja t "\t" ; printf "\n"
    # cat "$(x wsroot)"/.x-cmd/project_member.json | x ja t "\t" ; printf "\n"
}

___x_cmd_gcode_project_apply__project_info(){
    NO_CACHE=1  x gcode project info --json "$owner_project" | x ja t "\t" ; printf "\n"
    # cat "$(x wsroot)"/.x-cmd/project_info.json | x ja t "\t" ; printf "\n"
}

___x_cmd_gcode_project_apply__replace(){
    if [ $# -gt 0 ]; then
        local IFS=","; printf "replace:%s\n" "$*"
        return
    else
        printf "%s\n" "{}"
    fi
    # cat "$(x wsroot)"/.x-cmd/lteam-member.yml | x y2j | x ja t "\t" ; printf "\n"
}

___x_cmd_gcode_project_apply__help(){
    printf "\033[1m%s\033[0m\n\n\033[33m%s\033[0m\n    \033[36m%s\033[0m\n    \033[36m%s\033[0m\n" \
        "x gcode project apply <filepath | '-' config from stdin> <...alias name list>" \
        "Example" \
        "x gcode project apply project.yml bot=x-cmd-bot" \
        "cat ./project.yml | x gcode project apply - bot=x-cmd-bot"
}

# cat .x-cmd/gitlab-project.yml | x gcode project apply -  \
#     "lijunhao=edwinjhlee"  \
#     "hejiajie=jerry8hero" \
#     "litinghui=padparadsayc" \
#     "tangzhiwen=tzw-my" \
#     "zhengqiubin=Zhengqbbb" \
#     "zhengqiakai=qiakai" \
#     "zhengyuhang=mnnna" \
#     "wangli=amslime" \
#     "zhangchi=ilyydy" \
#     "huangshenglao=huangst798"